# This file is for apache 2.4+. It was derived from the file
# /etc/apache2/sites-available/default in apache2 as installed in ubuntu 12.04.
# See notes in /etc/apache2/sites-available/opentree-ssl.conf as well

    ServerAdmin webmaster@localhost
    CustomLog ${APACHE_LOG_DIR}/access.log combined

    # TEMPORARY REDIRECT to maintenance page
    #RedirectMatch 302 ^(.*)$ http://opentreeoflife.github.io/maintenance.html

    Alias "/taxonomy/browse" "/home/opentree/repo/opentree/taxonomy/cgi-bin/browse.py"
    <Directory "/home/opentree/repo/opentree/taxonomy/cgi-bin">
      Require all granted
      Options +ExecCGI
      AddHandler cgi-script .py
    </Directory>
    # ANSIBLE-based deploy currently just commented out because we are not
    #   deploying any tools from phylesystem-api on these machines...
    # N. B. phyleystem, collections, and amendments are singletons and are currently
    #   only deployed on api.opentreeoflife.org
    # Explicit routing for /cached/* URLs (in phylesystem-api)
    # RewriteEngine on
    # RewriteRule ^/cached/(.*) /phylesystem/default/cached/$1 [PT]
    # ------------------------------------------------------------
    # Public v3 API (originally cloned from v2)
    # phylesystem-api is provided via web2py
    # N.B. that we should match "bare" URLs like '/v3/study' to create a resource!
    # RewriteEngine on
    # RewriteRule ^/v3/study(.*) /phylesystem/v1/study$1 [PT]
    # collections-api is provided via web2py
    # RewriteEngine on
    # N.B. that we should match "bare" URLs like '/v3/collection' to create a resource!
    # RewriteRule ^/v3/collections(.*) /phylesystem/v1/collections$1 [PT]
    # RewriteRule ^/v3/collection(.*)  /phylesystem/v1/collection$1 [PT]
    # amendments-api is provided via web2py
    # RewriteEngine on
    # N.B. that we should match "bare" URLs like '/v3/amendment' to create a resource!
    # RewriteRule ^/v3/amendments(.*) /phylesystem/v1/amendments$1 [PT]
    # RewriteRule ^/v3/amendment(.*)  /phylesystem/v1/amendment$1 [PT]
    # 6543 = default port for ws_wrapper (calls port 1984: otc-tol-ws from otcetera)
    <Location /v3/tree_of_life>
      Require all granted
      ProxyPass  http://localhost:1983/v3/tree_of_life
      ProxyPassReverse  http://localhost:1983/v3/tree_of_life
    </Location>

    # ws_wrapper tnrs
    <Location /v3/tnrs>
      Require all granted
      ProxyPass  http://localhost:1983/v3/tnrs
      ProxyPassReverse  http://localhost:1983/v3/tnrs
    </Location>

    # taxomachine neo4j
    # <Location /v3/tnrs>
    #  Require all granted
    #  ProxyPass  http://localhost:7476/db/data/ext/tnrs_v3/graphdb
    #  ProxyPassReverse  http://localhost:7476/db/data/ext/tnrs_v3/graphdb
    # </Location>

    <Location /v3/taxonomy>
      Require all granted
      ProxyPass  http://localhost:1983/v3/taxonomy
      ProxyPassReverse  http://localhost:1983/v3/taxonomy
    </Location>

    # oti neo4j
    # <Location /v3/studies>
    #   Require all granted
    #   ProxyPass  http://localhost:7478/db/data/ext/studies_v3/graphdb
    #   ProxyPassReverse  http://localhost:7478/db/data/ext/studies_v3/graphdb
    # </Location>

    # ws_wrapper for conflict services
    <Location /v3/conflict>
      Require all granted
      ProxyPass  http://localhost:1983/v3/conflict
      ProxyPassReverse  http://localhost:1983/v3/conflict
    </Location>

    # ------------------------------------------------------------
    # Public v2 API
    # RewriteEngine on
    # RewriteRule ^/v2/study(.*) /phylesystem/v1/study$1 [PT]
    # collections-api is provided via web2py
    # N.B. that we should match "bare" URLs like '/v2/collection' to create a resource!
    # RewriteEngine on
    # RewriteRule ^/v2/collections(.*) /phylesystem/v1/collections$1 [PT]
    # RewriteRule ^/v2/collection(.*)  /phylesystem/v1/collection$1 [PT]

    # Route /v2/tree_of_life to same destination as /v3/tree_of_life
    # <Location /v2/tree_of_life>
    #  Require all granted
    #  ProxyPass  http://localhost:6543/v3/tree_of_life
    #  ProxyPassReverse  http://localhost:6543/v3/tree_of_life
    # </Location>

    # 7476 = taxomachine neo4j
    # <Location /v2/tnrs>
    #  Require all granted
    #  ProxyPass  http://localhost:7476/db/data/ext/tnrs_v2/graphdb
    #  ProxyPassReverse  http://localhost:7476/db/data/ext/tnrs_v2/graphdb
    #</Location>

    # <Location /v2/taxonomy>
    #  Require all granted
    #  ProxyPass  http://localhost:7476/db/data/ext/taxonomy/graphdb
    #  ProxyPassReverse  http://localhost:7476/db/data/ext/taxonomy/graphdb
    # </Location>

    # 7478 = oti neo4j
    # <Location /v2/studies>
    #   Require all granted
    #   ProxyPass  http://localhost:7478/db/data/ext/studies/graphdb
    #   ProxyPassReverse  http://localhost:7478/db/data/ext/studies/graphdb
    # </Location>


    # 6543 = Route /v2/conflict to the same destination as /v3/conflict
    # <Location /v2/conflict>
    #  Require all granted
    #  ProxyPass  http://localhost:1983/v3/conflict
    #  ProxyPassReverse  http://localhost:1983/v3/conflict
    # </Location>



    # web2py admin access

    # Restrict web2py admin pages to admin users on localhost (SSH tunnel)
    # TODO: Should this apply to the HTTPS VirtualHost as well?
    <Location /admin>
      Require ip 127.0.0.1
    </Location>
    <LocationMatch ^/([^/]+)/appadmin>
      Require ip 127.0.0.1
    </LocationMatch>

