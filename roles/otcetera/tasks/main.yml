
- name: Create otcetera dir
  file:
    path: "{{ install_location }}/otcetera"
    state: directory

- name: Clone otcetera repo
  git:
    repo: "{{ otcetera_git_remote }}"
    dest: "{{ install_location }}/otcetera/source"
    version: "{{ otcetera_branch }}"

- name: Install meson and requests into {{venv_otcws}}
  pip:
    virtualenv: "{{ venv_otcws }}"
    name:
      - "requests"
      - "meson"
  when: otcws

- name: Install otcetera packages using apt
  become: yes
  apt:
    name:
      - gcc-8
      - g++-8
      - ninja-build
      - libboost-all-dev
    state: present

- name: Install otcetera webservices packages
  become: yes
  apt:
    name:
      - cmake
      - libssl-dev
      - libcurl4-openssl-dev
      - daemonize
    state: present
  when: otcws

- name: Make g++-8 and gcc-8 the defaults
  alternatives:
    name: "{{item}}"
    link: "/usr/bin/{{item}}"
    path: "/usr/bin/{{item}}-8"
  with_items:
    - gcc
    - g++
  become: true
  become_method: sudo

- name: Install restbed for otc webservices using same install_location as otc
  include_role:
    name: restbed
  when: otcws

- name: Create parent of buildotc
  file:
    path: "{{ install_location }}/otcetera/buildotc"
    state: directory

- name: Write reconf.sh script
  template:
    src: templates/reconf_sh.j2
    dest: "{{ install_location }}/otcetera/buildotc/reconf.sh"

- name: Create the build subdir by running meson (via reconf.sh)
  command: bash reconf.sh
  args:
    chdir: "{{ install_location }}/otcetera/buildotc"
    creates: "{{ install_location }}/otcetera/buildotc/build/build.ninja"

- name: Run ninja to build and install otc
  command: nice -n10 ninja -C build install
  args:
    chdir: "{{ install_location }}/otcetera/buildotc"

- name: Perform the otc tests
  command: nice -n10 ninja -C build test
  args:
    chdir: "{{ install_location }}/otcetera/buildotc"

# Everything after this point is for webservices builds

- name: Write run_test.sh script for webservices tests
  template:
    src: templates/run_test_sh.j2
    dest: "{{ install_location }}/otcetera/buildotc/run_test.sh"
  when: otcws

- name: Perform otc tests using run_test.sh that sources the correct env
  command: bash run_test.sh
  args:
    chdir: "{{ install_location }}/otcetera/buildotc"
  when: otcws

# final two steps configure and launch otc webservices

- name: write launch_otc_ws_app.sh script
  template:
    src: templates/launch_otc_ws_app_sh.j2
    dest: "{{ install_location }}/local/bin/launch_otc_ws_app.sh"
  when: otcws

- name: "launch otcws server via launch script"
  command: "bash {{ install_location }}/local/bin/launch_otc_ws_app.sh"
  when: otcws
