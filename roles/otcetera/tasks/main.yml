# When compiling with otcws = True, this role assumes that synthesis
# tree and taxonomy exist in otc_ws_data (see ws_data role)

# SETUP
- name: Install meson and requests into {{venv_otcws}}
  pip:
    virtualenv: "{{ venv_otcws }}"
    name:
      - "requests"
      - "meson"


- name: Install packages using apt
  become: yes
  apt:
    name:
      - gcc
      - g++
      - ninja-build
      - libboost-all-dev
    state: present

- name: Install packages needed for webservices
  become: yes
  apt:
    name:
      - cmake
      - libssl-dev
      - libcurl4-openssl-dev
      - daemonize
    state: present
  when: otcws

- name: Install restbed for otc webservices
  include_role:
    name: restbed
  when: otcws

- name: Create otcetera dir
  file:
    path: "{{ install_location }}/otcetera"
    state: directory

- name: Clone otcetera repo
  git:
    repo: "{{ otcetera_git_remote }}"
    dest: "{{ install_location }}/otcetera/source"
    version: "{{ otcetera_branch }}"
  register: otcetera_git

# The rest of the role only gets run if the git repo has changed
- name: Build and install ocetera if git repo changed
  # BLOCK BEGINS
  block:

  - name: Create parent of buildotc
    file:
      path: "{{ install_location }}/otcetera/buildotc"
      state: directory

  - name: Write reconf.sh script
    template:
      src: templates/reconf_sh.j2
      dest: "{{ install_location }}/otcetera/buildotc/reconf.sh"

  - name: Create the build subdir by running meson (via reconf.sh)
    command: bash reconf.sh
    args:
      chdir: "{{ install_location }}/otcetera/buildotc"
      creates: "{{ install_location }}/otcetera/buildotc/build/build.ninja"

  - name: Run ninja to build and install otc
    command: nice -n10 ninja -C build install
    args:
      chdir: "{{ install_location }}/otcetera/buildotc"

  - name: Perform the otc tests
    command: nice -n10 ninja -C build test
    args:
      chdir: "{{ install_location }}/otcetera/buildotc"
    when: not otcws

  # Everything after this point is for webservices builds
  - name: Write run_test.sh script for webservices tests
    template:
      src: templates/run_test_sh.j2
      dest: "{{ install_location }}/otcetera/buildotc/run_test.sh"
    when: otcws

  - name: Perform otc tests using run_test.sh that sources the correct env
    command: bash run_test.sh
    args:
      chdir: "{{ install_location }}/otcetera/buildotc"
    when: otcws

  - name: Delete pid file so that we re-launch otcws ##his was leaving things inconsistent somehow so that the launch was failing...
    file:
      path: "{{ otc_ws_data }}/wspidfile.txt"
      state: absent

  # BLOCK ENDS
  when: otcetera_git.changed 

  # final two steps configure and launch otc webservices

- name: Create local/bin directory
  file:
    path: "{{ install_location }}/local/bin"
    state: directory

- name: write launch_otc_ws_app.sh script
  template:
    src: templates/launch_otc_ws_app_sh.j2
    dest: "{{ install_location }}/local/bin/launch_otc_ws_app.sh"
  when: otcws


- name: "launch otcws server via launch script"
  command: "bash {{ install_location }}/local/bin/launch_otc_ws_app.sh"
  args:
    creates: "{{ otc_ws_data }}/wspidfile.txt"

  when: otcws
