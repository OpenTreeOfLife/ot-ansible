---
## Install and configure peyotl
- name: Install peyotl ({{ peyotl_phylesystemapi_branch }})
  include_role:
    name: peyotl
  vars: 
    install_location: "{{ repo_dir }}"
    configure_peyotl: True
    python_version: python3
    venv_peyotl: "{{ venv_phylesystem_api }}"
    peyotl_branch: "{{ peyotl_phylesystemapi_branch }}"

- name: Clone phylesystem-api repo
  git:
    repo: https://github.com/OpenTreeOfLife/phylesystem-api.git
    dest: "{{ install_dir }}/phylesystem-api"
    version: "{{ phylesystem_api_branch }}"

- name: Install waitress
  pip:
    name: waitress
    virtualenv: "{{ venv_phylesystem_api }}"


- name: Install phylesystem-api python requirements
  pip:
    requirements: "{{ install_dir }}/phylesystem-api/requirements.txt"
    virtualenv: "{{ venv_phylesystem_api }}"

- name: Install phylesystem-api
  pip:
    name: "{{ install_location }}/phylesystem-api/phylesystem_api"
    extra_args: '-e'
    virtualenv: "{{ venv_phylesystem_api }}"

- name: Create dir for phylesystem-api config file
  file:
    state: directory
    path: "{{ phylesystem_api_config_location }}"


## Get phylesystem data (studies and minor doc-types)
# NB - We clone each repo from Github into a designated "docstore parent".
# We will trust peyotl to clone these "canonical" local repos into
# its mirror/ subdirectory as needed.

- name: ensure shared docstore-parent dir exists, and its ./mirror
  file:
      path: "{{ SHARED_DOCSTORE_PARENT }}mirror/"
      state: directory

- name: Clone/update local "canonical" docstore repos
  # TODO: switch to main/master first? to avoid problems if we're on a WIP branch
  loop: "{{ repo_paths }}"
  git:
    repo: "{{ item.github_url }}"
    version: master             # specified branch, in case we're deploying over a WIP branch
    accept_hostkey: yes      # good for occasionally changing host key
    ssh_opts: "-o StrictHostKeyChecking=accept-new"
    remote: "origin"            # default is 'origin'
    dest: "{{ item.local_path }}"
    recursive: yes              # yes is default; being explicit because submodules
    force: yes                  # clobber any locally modified patch files

- name: Configure docstore repos (remote.originssh.url)
  loop: "{{ repo_paths }}"
  git_config:
    scope: local
    repo: "{{ item.local_path }}"
    name: remote.originssh.url
    value: "{{ item.remote_url }}"

- name: Configure docstore repos (remote.originssh.fetch)
  loop: "{{ repo_paths }}"
  git_config:
    scope: local
    repo: "{{ item.local_path }}"
    name: remote.originssh.fetch
    value: +refs/heads/*:refs/remotes/originssh/*

- name: Configure docstore repos (user.name)
  loop: "{{ repo_paths }}"
  git_config:
    scope: global
    repo: "{{ item.local_path }}"
    name: user.name
    value: "OpenTree API"

- name: Configure docstore repos (user.email)
  loop: "{{ repo_paths }}"
  git_config:
    scope: global
    repo: "{{ item.local_path }}"
    name: user.email
    value: api@opentreeoflife.org

- name: Create phylesystem-api config file from template
  template:
    src: templates/config.j2
    dest: "{{ phylesystem_api_config_location }}/config.ini"

- name: ensure log directory exists and is writable
  file:
      path: "{{ logfile_dir }}"
      state: directory

- name: ensure phylesystem-api log file exists and is writable
  copy:
    content: ""
    dest: "{{ phylesystem_api_logging_filepath }}"
    force: no

- name: create script directory if not found
  ansible.builtin.file:
    path: "{{ script_location }}/local/bin"
    state: directory
    mode: u=rwx,g=r,o=r

- name: write launch_phylesystem_api.sh script
  template:
    src: templates/launch_phylesystem_api_sh.j2
    dest: "{{ script_location }}/local/bin/launch_phylesystem_api.sh"

- name: "launch launch_phylesystem_api via launch script"
  command: "bash {{ script_location }}/local/bin/launch_phylesystem_api.sh || exit"

