[security]
secure_sessions_with_HTTPS = true



[maintenance]
# During system migration and other scheduled maintenance, we should allow
# viewing of existing studies but block study creation and editing.
# Boolean values here should be 'true' or 'false'. Use indents to define a long (multi-line) notice.
maintenance_in_progress = false
maintenance_notice = Study creation and editing are disabled while we upgrade to
                   the latest code and features. Please pardon the
                   inconvenience. We expect to be back online for editing
                   studies later this evening (Thursday, July 10).
## upcoming_maintenance_scheduled = true
## upcoming_maintenance_notice = Note that we've scheduled an upgrade for Saturday...

[apis]
# These values can be obtained by registering your instance as an
# application with GitHub, at https://github.com/settings/applications/new
github_app_id = {{ curator_github_app_id }}
github_client_id = {{ curator_github_client_id }}
github_redirect_uri = {{ curator_github_redirect_uri }}
github_app_installation_id = {{ curator_github_app_installation_id }}

# DON'T INCLUDE 'github_client_secret' value here. For better security, this is
# loaded from a separate file and added to config data on-the-fly.


# List public-facing base URL for supporting data services
# (NOTE that these are used by both server- and client-side code)
[domains]
treemachine = {{ tree_of_life_endpoint }}
taxomachine = {{ taxonomy_endpoint }}
oti = {{ otindex_endpoint }}
opentree_api = {{ tree_of_life_endpoint }}
collections_api_base_url = {{ curator_endpoint }}
favorites_api_base_url = {{ curator_endpoint }}
# Cached versions of some APIs will speed up repeated calls (see below).
# These use a simple web2py cache implemented in phylesystem-api
CACHED_treemachine = {{ tree_of_life_endpoint }}
CACHED_taxomachine = {{ tree_of_life_endpoint }}
CACHED_oti = {{ otindex_endpoint }}/cached

# Building on the URLs above, complete the public-facing URL for all methods
# (again, these should work from both server- and client-side code)
#
# NOTE: In our example setup, all service methods are proxied through Apache as
# URLs within the main opentree site. So we assume that partial paths '/db/data/'
# are handled in the ProxyPass statement.
[method_urls]
doTNRSForAutocomplete_url = {taxomachine_domain}/v3/tnrs/autocomplete_name
doTNRSForMappingOTUs_url = {taxomachine_domain}/v3/tnrs/match_names
getContextsJSON_url = {CACHED_taxomachine_domain}/v3/tnrs/contexts
getContextForNames_url = {taxomachine_domain}/v3/tnrs/infer_context
getSynthesisSourceList_url = {CACHED_treemachine_domain}/v3/tree_of_life/about
getTaxonomicMRCAForNodes_url = {taxomachine_domain}/v3/taxonomy/mrca
getDraftTreeMRCAForNodes_url = {treemachine_domain}/v3/tree_of_life/mrca
findAllSynthesisRuns_url = {treemachine_domain}/v3/tree_of_life/list_custom_built_trees
requestNewSynthesisRun_url = {treemachine_domain}/v3/tree_of_life/build_tree
findAllStudies_url = {CACHED_oti_domain}/v3/studies/find_studies
# TODO: Can we use CACHED_oti_domain for this?
singlePropertySearchForStudies_url = {oti_domain}/v3/studies/find_studies
singlePropertySearchForTrees_url = {oti_domain}/v3/studies/find_trees
findAllTreeCollections_url = {opentree_api_domain}/v3/collections/find_collections
treeConflictStatus_url = {conflict_api_domain}/v3/conflict/conflict-status?tree1={TREE1_ID}&tree2={TREE2_ID}&use_cache={USE_CACHE}
# some undocumented utility methods (for internal use only)
phylesystem_config_url = {opentree_api_domain}/v3/phylesystem_config
render_markdown_url = {opentree_api_domain}/v3/render_markdown
getTreesQueuedForSynthesis_url = {opentree_api_domain}/v3/trees_in_synth
includeTreeInSynthesis_url = {opentree_api_domain}/v3/include_tree_in_synth
excludeTreeFromSynthesis_url = {opentree_api_domain}/v3/exclude_tree_from_synth


# Open Tree API - RESTful URLs for managing studies in remote storage (note HTTP verbs for each)
#
# NOTE that we shouldn't need '?jsoncallback=?' on URLs for the Open Tree API, since
# it now supports cross-domain requests via CORS

API_create_study_POST_url = {opentree_api_domain}/v3/study
API_load_study_GET_url = {opentree_api_domain}/v3/study/{STUDY_ID}
API_update_study_PUT_url = {opentree_api_domain}/v3/study/{STUDY_ID}
API_remove_study_DELETE_url = {opentree_api_domain}/v3/study/{STUDY_ID}

API_create_file_POST_url = {opentree_api_domain}/v3/study/{STUDY_ID}/file
API_load_file_GET_url = {opentree_api_domain}/v3/study/{STUDY_ID}/file/{FILE_ID}
API_update_file_PUT_url = {opentree_api_domain}/v3/study/{STUDY_ID}/file/{FILE_ID}
API_remove_file_DELETE_url = {opentree_api_domain}/v3/study/{STUDY_ID}/file/{FILE_ID}

API_create_collection_POST_url = {opentree_api_domain}/v3/collection
API_load_collection_GET_url = {opentree_api_domain}/v3/collection/{COLLECTION_ID}
API_update_collection_PUT_url = {opentree_api_domain}/v3/collection/{COLLECTION_ID}
API_remove_collection_DELETE_url = {opentree_api_domain}/v3/collection/{COLLECTION_ID}

API_create_amendment_POST_url = {opentree_api_domain}/v3/amendment

